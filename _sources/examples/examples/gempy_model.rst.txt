
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/examples/gempy_model.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_examples_gempy_model.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_examples_gempy_model.py:


Reading Simple GemPy model in Subsurface
========================================

.. GENERATED FROM PYTHON SOURCE LINES 5-86







.. code-block:: default

    #
    # import sys
    #
    # sys.path.insert(0, 'subsurface/')
    # import pooch
    # import subsurface as ss
    # import subsurface.reader.read_netcdf
    #
    # # %% md
    # # Single surface
    # # --------------
    #
    # # Pull gempy model
    # model_files = pooch.retrieve(
    #     url="https://github.com/cgre-aachen/gempy_data/raw/master/"
    #         "data/subsurface/example1.zip",
    #     known_hash="fb79a63eeb874cf0cdca557106c62c67eace23811db5935e57c3448fed7f8978",
    #     processor=pooch.Unzip()
    # )
    #
    # # %%
    # fname, = [i for i in model_files if "meshes.nc" in i]
    # dataset = ss.reader.read_netcdf.read_unstruct(fname)
    #
    # # %%
    # obj = ss.TriSurf(dataset)
    # print(obj.mesh.points_attributes_to_dict)
    #
    # mesh = ss.visualization.to_pyvista_mesh(obj)
    # ss.visualization.pv_plot([mesh])
    #
    #
    # # %% md
    # # Four Layers
    # # -----------
    #
    # # Pull gempy model
    # model_files_2 = pooch.retrieve(
    #     url="https://github.com/cgre-aachen/gempy_data/raw/master/data/gempy_models/Kim.zip",
    #     known_hash="f530a88351ed0e38673c6937161c59a2f69df92202e14c1e5d5729ed5d72a323",
    #     processor=pooch.Unzip()
    # )
    #
    # # %% md
    # # Triangular meshes
    # # +++++++++++++++++
    #
    # # %%
    # fname, = [i for i in model_files_2 if "meshes.nc" in i]
    # gempy_tri_mesh_unstruct =  ss.reader.read_netcdf.read_unstruct(fname)
    # tri_surf = ss.TriSurf(gempy_tri_mesh_unstruct)
    # mesh = ss.visualization.to_pyvista_mesh(tri_surf)
    # ss.visualization.pv_plot([mesh])
    #
    # # %% md
    # # Regular grid
    # # ++++++++++++
    #
    # fname, = [i for i in model_files_2 if "regular_grid.nc" in i]
    # gempy_struct = ss.reader.read_netcdf.read_struct(fname)
    # regular_grid = ss.StructuredGrid(gempy_struct)
    #
    # # %%
    # pyvista_mesh = ss.visualization.to_pyvista_grid(regular_grid,
    #                                                 data_set_name='property_matrix',
    #                                                 attribute_slice={'Properties': 'id'}
    #                                                 )
    #
    # ss.visualization.pv_plot([pyvista_mesh])
    #
    #
    #
    #
    # # %%
    #
    # pyvista_mesh = ss.visualization.to_pyvista_grid(regular_grid,
    #                                                 data_set_name='block_matrix',
    #                                                 attribute_slice={'Properties': 'id',
    #                                                                  'Features': 'Default series'})
    #
    # ss.visualization.pv_plot([pyvista_mesh])


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.001 seconds)


.. _sphx_glr_download_examples_examples_gempy_model.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: gempy_model.py <gempy_model.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: gempy_model.ipynb <gempy_model.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
